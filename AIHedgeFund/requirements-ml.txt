# Lightweight ML Requirements with Parallelization Support
# =========================================================
# Optimized for multi-agent parallel processing
# Total size: ~2.5GB (CPU-optimized)

# Core ML Libraries (all support parallel processing)
xgboost==2.0.3            # Built-in parallel tree boosting
catboost==1.2.2           # GPU/CPU parallel training
lightgbm==4.2.0           # Distributed gradient boosting
scikit-learn==1.3.2       # Joblib parallelization

# Parallel Processing & Async
ray[default]==2.9.0       # Distributed computing framework
dask[complete]==2023.12.1 # Parallel computing library
joblib==1.3.2             # Parallel computing tools
multiprocess==0.70.15     # Better multiprocessing
asyncio-pool==0.6.0       # Async task pools
aiohttp==3.9.1            # Async HTTP
aiodns==3.1.1            # Async DNS resolver
nest-asyncio==1.5.8       # Nested async support

# Multi-Agent Framework
mesa==2.1.5              # Agent-based modeling framework
networkx==3.2.1          # Agent communication networks
celery[redis]==5.3.4     # Distributed task queue
dramatiq==1.15.0         # Task processing library

# Model Interpretation
shap==0.44.0             # Parallel SHAP calculations

# Technical Analysis (Vectorized)
ta-lib==0.4.28           # C-optimized indicators
pandas-ta==0.3.14b0      # Vectorized pandas operations
vectorbt==0.26.0         # Vectorized backtesting

# Portfolio Optimization
pypfopt==1.5.5           # Efficient frontier optimization
riskfolio-lib==4.3.1     # Advanced portfolio optimization
cvxpy==1.4.1             # Convex optimization

# Market Data (Async)
yfinance==0.2.33         # Threaded data fetching
aiofinance==0.1.3        # Async finance data
alpha-vantage==2.3.1     # API-based data

# Time Series (Lightweight)
statsmodels==0.14.1      # Statistical models
pmdarima==2.0.4          # Auto ARIMA
prophet==1.1.5           # Facebook's Prophet (optional)

# Lightweight Neural Networks
tensorflow-cpu==2.15.0    # CPU-only TensorFlow
keras==2.15.0            # High-level neural API

# Sentiment Analysis (API-based)
openai>=1.3.0            # OpenAI API
anthropic>=0.7.0         # Claude API
transformers==4.36.2     # For tokenization only
sentencepiece==0.1.99    # Lightweight tokenizer

# Data Processing (Parallel)
pandas>=2.0.0            # DataFrame operations
numpy>=1.24.0            # Numerical computing
polars==0.20.2           # Lightning-fast DataFrames
pyarrow==14.0.2          # Columnar data processing
numba==0.58.1            # JIT compilation

# Caching & Performance
redis==5.0.1             # In-memory data store
diskcache==5.6.3         # Disk-based cache
cachetools==5.3.2        # Caching utilities
lz4==4.3.2               # Fast compression

# Monitoring & Profiling
prometheus-client==0.19.0 # Metrics collection
memory-profiler==0.61.0  # Memory profiling
line-profiler==4.1.1     # Line-by-line profiling

# Visualization
plotly==5.18.0           # Interactive plots
dash==2.14.2             # Dashboard framework
matplotlib>=3.7.0        # Static plots

# Development & Testing
pytest>=7.4.0            # Testing framework
pytest-asyncio>=0.21.0   # Async testing
pytest-parallel==0.1.1   # Parallel test execution
hypothesis==6.92.1       # Property-based testing

# Logging & Debugging
loguru==0.7.2           # Better logging
rich==13.7.0            # Beautiful terminal output

# Optional Heavy Dependencies (install separately if needed)
# torch==2.1.2+cpu       # PyTorch CPU version
# jax[cpu]==0.4.23       # Google's JAX for CPU